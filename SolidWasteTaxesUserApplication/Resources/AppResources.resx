<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>MY APPLICATION</value>
  </data>
  <data name="SampleProperty" xml:space="preserve">
    <value>Sample Runtime Property Value</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="AboutPageContent" xml:space="preserve">
    <value>Personal Waste Tax Management is a simple and useful application completely developed for Windows Phone 8 that gives you the opportunity to check your obligations on Waste Taxes. The application allows you to check your Current Year Waste Taxes, your Previous Year Waste Taxes, your Interests Taxes and your Specific Waste Taxes.
Solid Waste Taxes also gives you the oppurtunity to make requests for the transportation of Specific Waste from your home or office, such as Medical Waste or Chemical Waste!</value>
  </data>
  <data name="AccumulatorLabel" xml:space="preserve">
    <value>Accumulator</value>
  </data>
  <data name="AnimalWasteLabel" xml:space="preserve">
    <value>Animal Waste</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>Waste Taxes Information Application</value>
  </data>
  <data name="CardExpiryDate" xml:space="preserve">
    <value>Expiry Date :</value>
  </data>
  <data name="CardHolderNameLabel" xml:space="preserve">
    <value>Card holder name :</value>
  </data>
  <data name="CardInformationLabel" xml:space="preserve">
    <value>Credit Card Information</value>
  </data>
  <data name="CardTypeLabel" xml:space="preserve">
    <value>Card Type :</value>
  </data>
  <data name="ChemicalWasteLabel" xml:space="preserve">
    <value>Chemical Waste</value>
  </data>
  <data name="ChooseSpecificWasteLabel" xml:space="preserve">
    <value>Please, choose waste type!</value>
  </data>
  <data name="ConfigurationLabel" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="ConstructionLabel" xml:space="preserve">
    <value>Construction</value>
  </data>
  <data name="CreditCardHolderNameValidationMessage" xml:space="preserve">
    <value>*Please,enter credit card holder name!</value>
  </data>
  <data name="CreditCardNumberLabel" xml:space="preserve">
    <value>Credit Card No. :</value>
  </data>
  <data name="CreditCardNumberValidationMessage" xml:space="preserve">
    <value>*Please, enter credit card number!</value>
  </data>
  <data name="CurrentYearTaxesLabel" xml:space="preserve">
    <value>Current Year Taxes :</value>
  </data>
  <data name="ElectronicsLabel" xml:space="preserve">
    <value>Electronics</value>
  </data>
  <data name="FailureInformationLabel" xml:space="preserve">
    <value>Sorry !Something went wrong !</value>
  </data>
  <data name="FullNameMessage" xml:space="preserve">
    <value>Plase,enter your full name !</value>
  </data>
  <data name="IdentityNumberMessage" xml:space="preserve">
    <value>Please, enter your personal identity number !</value>
  </data>
  <data name="InterestAmoutLabel" xml:space="preserve">
    <value>Interests :</value>
  </data>
  <data name="MedicalWasteLabel" xml:space="preserve">
    <value>Medical Waste</value>
  </data>
  <data name="NoPersonalDataInSettings" xml:space="preserve">
    <value>Please enter your personal data in Settings!</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Solid Waste Taxes Information page !</value>
  </data>
  <data name="PayButtonLabel" xml:space="preserve">
    <value>Pay Taxes</value>
  </data>
  <data name="PaymentHeaderLabel" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PaymentMadeLabel" xml:space="preserve">
    <value>Payment was successful!</value>
  </data>
  <data name="PersonalIdentityNumberRequiredLabel" xml:space="preserve">
    <value>*Personal Identity Number Required !</value>
  </data>
  <data name="PersonFullNameRequiredLabel" xml:space="preserve">
    <value>*Name Required !</value>
  </data>
  <data name="PreviousYearsTaxestLabel" xml:space="preserve">
    <value>Previous Years Taxes :</value>
  </data>
  <data name="SaveButtonLabel" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingsPageLabel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsSavedLabel" xml:space="preserve">
    <value>Settings saved!</value>
  </data>
  <data name="SolidWasteInformationLabel" xml:space="preserve">
    <value>Solid Waste Information</value>
  </data>
  <data name="SolidWasteTaxesHeader" xml:space="preserve">
    <value>Solid Waste Taxes</value>
  </data>
  <data name="SpecificWasteHeaderLabel" xml:space="preserve">
    <value>Specific Waste Request</value>
  </data>
  <data name="SpecificWasteRequest" xml:space="preserve">
    <value>Specific Waste Request</value>
  </data>
  <data name="SpecificWasteRequestHeader" xml:space="preserve">
    <value>Specific Waste Request</value>
  </data>
  <data name="SpecificWasteRequestPageLevel" xml:space="preserve">
    <value>Specific Waste Request</value>
  </data>
  <data name="SpecificWasteRequestSentLabel" xml:space="preserve">
    <value> request sent!</value>
  </data>
  <data name="SpecificWasteTaxesLabel" xml:space="preserve">
    <value>Specific Waste Taxes :</value>
  </data>
  <data name="TaxesInformation" xml:space="preserve">
    <value>Taxes Information</value>
  </data>
  <data name="TaxesInformationHeaderLabel" xml:space="preserve">
    <value>Taxes Information</value>
  </data>
  <data name="TaxesInformationPageLabel" xml:space="preserve">
    <value>Taxes Information</value>
  </data>
  <data name="TotalDebtLabel" xml:space="preserve">
    <value>Total Debt :</value>
  </data>
  <data name="WaitingLabel" xml:space="preserve">
    <value>Waiting.........{0}%</value>
  </data>
</root>